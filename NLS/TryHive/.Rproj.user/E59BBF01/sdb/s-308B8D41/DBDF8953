{
    "contents" : "##\n##install packages if not already done so (uncomment)\n##\n# install.packages(\"circlize\")\n# install.packages(\"plyr\")\n\n##\n##read in table and define matrix (m) and reference data.frame (df1)\n##\nm<-read.table(system.file(\"science\", \"region_custom.txt\", package = \"migest\"), skip=2, stringsAsFactors=FALSE)\nsources <-read.table(system.file(\"science\", \"region_custom.txt\", package = \"migest\"), skip=2, stringsAsFactors=FALSE)\n\n\nm <-DIRM2014\n#data.frame for details on each region\ndf1<-m[,1:3]\nnames(df1)<-c(\"order\",\"rgb\",\"region\")\ndf1$region<-gsub(\"_\", \" \", df1$region)\n\n#flow matrix\nm1<-m[,-(1:3)]/1e06\nm1<-as.matrix(m1)\ndimnames(m1)<-list(orig=df1$region,dest=df1$region)\n\n##\n##sort order of data.frame and matrix for plotting in circos\n##\nlibrary(\"plyr\")\ndf1<-arrange(df1, order)\ndf1$region <- factor(df1$region, levels=df1$region)\nm<-m[levels(df1$region),levels(df1$region)]\n\n##\n##define ranges of circos sectors and their colors (both of the sectors and the links)\n##\ndf1$xmin <- 0\ndf1$xmax <- rowSums(m)+colSums(m)\nn<-nrow(df1)\ndf1 <- cbind(df1, matrix(as.numeric(unlist(strsplit(df1$rgb,\",\"))),nrow=n, byrow=TRUE) )\nnames(df1)[ncol(df1)-2:0]<-c(\"r\",\"g\",\"b\")\ndf1$rcol<-rgb(df1$r, df1$g, df1$b, max = 255)\ndf1$lcol<-rgb(df1$r, df1$g, df1$b, alpha=200, max = 255)\n\n##\n##plot sectors\n##\nlibrary(\"circlize\")\npar(mar=rep(0,4))\ncircos.clear()\n\n#basic circos graphic parameters\ncircos.par(cell.padding=c(0,0,0,0), track.margin=c(0,0.1), start.degree = 90, gap.degree =4)\n\n#sector details\ncircos.initialize(factors = df1$region, xlim = cbind(df1$xmin, df1$xmax))\n\n#plot sectors\ncircos.trackPlotRegion(ylim = c(0, 1), factors = df1$region, track.height=0.1, bg.border = NA, bg.col = NA, bg.lty =0, bg.lwd=0.0001,\n                       #panel.fun for each sector\n                       panel.fun = function(x, y) {\n                         #select details of current sector\n                         name = get.cell.meta.data(\"sector.index\")\n                         i = get.cell.meta.data(\"sector.numeric.index\")\n                         xlim = get.cell.meta.data(\"xlim\")\n                         ylim = get.cell.meta.data(\"ylim\")\n                         \n                         #plot country labels\n                         circos.text(x=mean(xlim), y=2.2, labels=name, facing = \"bending\", cex=0.8)\n                         #                          \n                         #                          #plot main sector\n                         circos.rect(xleft=xlim[1], ybottom=ylim[1], xright=xlim[2], ytop=ylim[2], \n                                     col = df1$rcol[i], border=df1$rcol[i])\n                         #                          \n                         #                          #blank in part of main sector\n                         #                          circos.rect(xleft=xlim[1], ybottom=ylim[1], xright=xlim[2]-rowSums(m)[i], ytop=ylim[1]+0.3, \n                         #                                      col = \"white\", border = \"white\")\n                         #                          \n                         #                          #white line all the way around\n                         #                          circos.rect(xleft=xlim[1], ybottom=0.3, xright=xlim[2], ytop=0.32, col = \"white\", border = \"white\")\n                         #                          \n                         #                          #plot axis\n                         #                          circos.axis(labels.cex=0.8, direction = \"outside\", major.at=seq(0,floor(df1$xmax)[i]), minor.ticks=1,\n                         #                                      labels.away.percentage = 0.15)\n                       })\n\n\n##\n##plot links\n##\n#add sum values to df1, marking the x-position of the first links out (sum1) and in (sum2). Updated for further links in loop below.\ndf1$sum1 <- colSums(m)\ndf1$sum2 <- numeric(n)\n\n#create a data.frame of the flow matrix sorted by flow size, to allow largest flow plotted first\ndf2<-cbind(as.data.frame(m),orig=rownames(m),  stringsAsFactors=FALSE)\ndf2<-reshape(df2, idvar=\"orig\", varying=list(1:n), direction=\"long\", timevar=\"dest\", time=rownames(m),  v.names = \"m\")\ndf2<-arrange(df2,desc(m))\n\n#keep only the largest flows to avoid clutter\ndf2<-subset(df2, m>quantile(m,0.65))\n\n\nfor(k in 1:nrow(df2)){\n  #i,j reference of flow matrix\n  i<-match(df2$orig[k],df1$region)\n  j<-match(df2$dest[k],df1$region)\n  \n  #plot link\n  circos.link(sector.index1=df1$region[i], point1=c(df1$sum1[i], df1$sum1[i] + abs(m[i, j])),\n              sector.index2=df1$region[j], point2=c(df1$sum2[j], df1$sum2[j] + abs(m[i, j])),\n              col = df1$lcol[i])\n  \n  #update sum1 and sum2 for use when plotting the next link\n  df1$sum1[i] = df1$sum1[i] + abs(m[i, j])\n  df1$sum2[j] = df1$sum2[j] + abs(m[i, j])\n}\n\n#remove created objects\n#rm(df1,df2,m,i,j,k,n)",
    "created" : 1422996511133.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "1404350698",
    "id" : "DBDF8953",
    "lastKnownWriteTime" : 7306930285072053095,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled8"
    },
    "source_on_save" : false,
    "type" : "r_source"
}