df1$rcol<-rgb(df1$r, df1$g, df1$b, max = 255)
df1$lcol<-rgb(df1$r, df1$g, df1$b, alpha=200, max = 255)
##
##plot sectors
##
library("circlize")
par(mar=rep(0,4))
circos.clear()
#basic circos graphic parameters
circos.par(cell.padding=c(0,0,0,0), track.margin=c(0,0.1), start.degree = 90, gap.degree =4)
#sector details
circos.initialize(factors = df1$region, xlim = cbind(df1$xmin, df1$xmax))
#plot sectors
circos.trackPlotRegion(ylim = c(0, 1), factors = df1$region,
track.height=0.1, bg.border = NA, bg.col = NA, bg.lty =0, bg.lwd=0.0001,
#panel.fun for each sector
panel.fun = function(x, y) {
#select details of current sector
name = get.cell.meta.data("sector.index")
i = get.cell.meta.data("sector.numeric.index")
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
#plot country labels
circos.text(x=mean(xlim), y=2.2, labels=name, facing = "bending", cex=0.8)
#
#                          #plot main sector
circos.rect(xleft=xlim[1], ybottom=ylim[1], xright=xlim[2], ytop=ylim[2],
col = df1$rcol[i], border=df1$rcol[i])
#
#                          #blank in part of main sector
#                          circos.rect(xleft=xlim[1], ybottom=ylim[1], xright=xlim[2]-rowSums(m)[i], ytop=ylim[1]+0.3,
#                                      col = "white", border = "white")
#
#                          #white line all the way around
#                          circos.rect(xleft=xlim[1], ybottom=0.3, xright=xlim[2], ytop=0.32, col = "white", border = "white")
#
#                          #plot axis
circos.axis(labels.cex=0.6, major.at=seq(from=0,to=floor(df1$xmax)[i],by=500),
labels.away.percentage = 0.15)
})
m <-  read.delim("~/DIRM20142trcolorsEMEA.txt", header=FALSE, dec=",",stringsAsFactors=FALSE,as.is=T, na.strings = ".")
m <- data.frame(m)
#data.frame for details on each region
df1<-m[,1:3]
names(df1)<-c("order","rgb","region")
df1$region<-gsub("_", " ", df1$region)
#flow matrix
m<-m[,-(1:3)]
m<-as.matrix(m)
dimnames(m)<-list(orig=df1$region,dest=df1$region)
<-  read.delim("~/DIRM20142trcolorsEMEA.txt", header=FALSE, dec=",",stringsAsFactors=FALSE,as.is=T, na.strings = ".")
m <- data.frame(m)
m <-  read.delim("~/DIRM20142trcolorsEMEA.txt", header=FALSE, dec=",",stringsAsFactors=FALSE,as.is=T, na.strings = ".")
m <- data.frame(m)
View(m)
df1<-m[,1:3]
names(df1)<-c("order","rgb","region")
df1$region<-gsub("_", " ", df1$region)
#flow matrix
m<-m[,-(1:3)]
m<-as.matrix(m)
dimnames(m)<-list(orig=df1$region,dest=df1$region)
##
##sort order of data.frame and matrix for plotting in circos
##
library("plyr")
df1<-arrange(df1, order)
df1$region <- factor(df1$region, levels=df1$region)
m<-m[levels(df1$region),levels(df1$region)]
##
##define ranges of circos sectors and their colors (both of the sectors and the links)
##
df1$xmin <- 0
df1$xmax <-  (colSums(m)  + rowSums(m)  )
n<-nrow(df1)
df1 <- cbind(df1, matrix(as.numeric(unlist(strsplit(df1$rgb,","))),nrow=n, byrow=TRUE) )
names(df1)[ncol(df1)-2:0]<-c("r","g","b")
df1$rcol<-rgb(df1$r, df1$g, df1$b, max = 255)
df1$lcol<-rgb(df1$r, df1$g, df1$b, alpha=200, max = 255)
##
##plot sectors
##
library("circlize")
par(mar=rep(0,4))
circos.clear()
#basic circos graphic parameters
circos.par(cell.padding=c(0,0,0,0), track.margin=c(0,0.1), start.degree = 90, gap.degree =4)
#sector details
circos.initialize(factors = df1$region, xlim = cbind(df1$xmin, df1$xmax))
#plot sectors
circos.trackPlotRegion(ylim = c(0, 1), factors = df1$region,
track.height=0.1, bg.border = NA, bg.col = NA, bg.lty =0, bg.lwd=0.0001,
#panel.fun for each sector
panel.fun = function(x, y) {
#select details of current sector
name = get.cell.meta.data("sector.index")
i = get.cell.meta.data("sector.numeric.index")
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
#plot country labels
circos.text(x=mean(xlim), y=2.2, labels=name, facing = "bending", cex=0.8)
#
#                          #plot main sector
circos.rect(xleft=xlim[1], ybottom=ylim[1], xright=xlim[2], ytop=ylim[2],
col = df1$rcol[i], border=df1$rcol[i])
#
#                          #blank in part of main sector
#                          circos.rect(xleft=xlim[1], ybottom=ylim[1], xright=xlim[2]-rowSums(m)[i], ytop=ylim[1]+0.3,
#                                      col = "white", border = "white")
#
#                          #white line all the way around
#                          circos.rect(xleft=xlim[1], ybottom=0.3, xright=xlim[2], ytop=0.32, col = "white", border = "white")
#
#                          #plot axis
circos.axis(labels.cex=0.6, major.at=seq(from=0,to=floor(df1$xmax)[i],by=500),
labels.away.percentage = 0.15)
})
View(df2)
View(df1)
##
##install packages if not already done so (uncomment)
##
# install.packages("circlize")
# install.packages("plyr")
##
##read in table and define matrix (m) and reference data.frame (df1)
##
#m<-read.table(system.file("science", "region_custom.txt", package = "migest"), skip=2, stringsAsFactors=FALSE)
# sources <-read.table(system.file("science", "region_custom.txt", package = "migest"), skip=2, stringsAsFactors=FALSE)
m <-  read.delim("~/DIRM20142trcolorsEMEA.txt", header=FALSE, dec=",",stringsAsFactors=FALSE,as.is=T, na.strings = ".")
m <- data.frame(m)
#data.frame for details on each region
df1<-m[,1:3]
names(df1)<-c("order","rgb","region")
df1$region<-gsub("_", " ", df1$region)
#flow matrix
m<-m[,-(1:3)]
m<-as.matrix(m)
dimnames(m)<-list(orig=df1$region,dest=df1$region)
##
##sort order of data.frame and matrix for plotting in circos
##
library("plyr")
df1<-arrange(df1, order)
df1$region <- factor(df1$region, levels=df1$region)
m<-m[levels(df1$region),levels(df1$region)]
##
##define ranges of circos sectors and their colors (both of the sectors and the links)
##
df1$xmin <- 0
df1$xmax <-  (colSums(m)  + rowSums(m)  )
n<-nrow(df1)
df1 <- cbind(df1, matrix(as.numeric(unlist(strsplit(df1$rgb,","))),nrow=n, byrow=TRUE) )
names(df1)[ncol(df1)-2:0]<-c("r","g","b")
df1$rcol<-rgb(df1$r, df1$g, df1$b, max = 255)
df1$lcol<-rgb(df1$r, df1$g, df1$b, alpha=200, max = 255)
##
##plot sectors
##
library("circlize")
par(mar=rep(0,4))
circos.clear()
#basic circos graphic parameters
circos.par(cell.padding=c(0,0,0,0), track.margin=c(0,0.1), start.degree = 90, gap.degree =4)
#sector details
circos.initialize(factors = df1$region, xlim = cbind(df1$xmin, df1$xmax))
#plot sectors
circos.trackPlotRegion(ylim = c(0, 1), factors = df1$region,
track.height=0.1, bg.border = NA, bg.col = NA, bg.lty =0, bg.lwd=0.0001,
#panel.fun for each sector
panel.fun = function(x, y) {
#select details of current sector
name = get.cell.meta.data("sector.index")
i = get.cell.meta.data("sector.numeric.index")
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
#plot country labels
circos.text(x=mean(xlim), y=2.2, labels=name, facing = "bending", cex=0.8)
#
#                          #plot main sector
circos.rect(xleft=xlim[1], ybottom=ylim[1], xright=xlim[2], ytop=ylim[2],
col = df1$rcol[i], border=df1$rcol[i])
#
#                          #blank in part of main sector
#                          circos.rect(xleft=xlim[1], ybottom=ylim[1], xright=xlim[2]-rowSums(m)[i], ytop=ylim[1]+0.3,
#                                      col = "white", border = "white")
#
#                          #white line all the way around
#                          circos.rect(xleft=xlim[1], ybottom=0.3, xright=xlim[2], ytop=0.32, col = "white", border = "white")
#
#                          #plot axis
circos.axis(labels.cex=0.6, major.at=seq(from=0,to=floor(df1$xmax)[i],by=50000),
labels.away.percentage = 0.15)
})
##
##install packages if not already done so (uncomment)
##
# install.packages("circlize")
# install.packages("plyr")
##
##read in table and define matrix (m) and reference data.frame (df1)
##
#m<-read.table(system.file("science", "region_custom.txt", package = "migest"), skip=2, stringsAsFactors=FALSE)
# sources <-read.table(system.file("science", "region_custom.txt", package = "migest"), skip=2, stringsAsFactors=FALSE)
m <-  read.delim("~/DIRM20142trcolorsEMEA.txt", header=FALSE, dec=",",stringsAsFactors=FALSE,as.is=T, na.strings = ".")
m <- data.frame(m)
#data.frame for details on each region
df1<-m[,1:3]
names(df1)<-c("order","rgb","region")
df1$region<-gsub("_", " ", df1$region)
#flow matrix
m<-m[,-(1:3)]
m<-as.matrix(m)
dimnames(m)<-list(orig=df1$region,dest=df1$region)
##
##sort order of data.frame and matrix for plotting in circos
##
library("plyr")
df1<-arrange(df1, order)
df1$region <- factor(df1$region, levels=df1$region)
m<-m[levels(df1$region),levels(df1$region)]
##
##define ranges of circos sectors and their colors (both of the sectors and the links)
##
df1$xmin <- 0
df1$xmax <-  (colSums(m)  + rowSums(m)  )
n<-nrow(df1)
df1 <- cbind(df1, matrix(as.numeric(unlist(strsplit(df1$rgb,","))),nrow=n, byrow=TRUE) )
names(df1)[ncol(df1)-2:0]<-c("r","g","b")
df1$rcol<-rgb(df1$r, df1$g, df1$b, max = 255)
df1$lcol<-rgb(df1$r, df1$g, df1$b, alpha=200, max = 255)
##
##plot sectors
##
library("circlize")
par(mar=rep(0,4))
circos.clear()
#basic circos graphic parameters
circos.par(cell.padding=c(0,0,0,0), track.margin=c(0,0.1), start.degree = 90, gap.degree =4)
#sector details
circos.initialize(factors = df1$region, xlim = cbind(df1$xmin, df1$xmax))
#plot sectors
circos.trackPlotRegion(ylim = c(0, 1), factors = df1$region,
track.height=0.1, bg.border = NA, bg.col = NA, bg.lty =0, bg.lwd=0.0001,
#panel.fun for each sector
panel.fun = function(x, y) {
#select details of current sector
name = get.cell.meta.data("sector.index")
i = get.cell.meta.data("sector.numeric.index")
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
#plot country labels
circos.text(x=mean(xlim), y=2.2, labels=name, facing = "bending", cex=0.8)
#
#                          #plot main sector
circos.rect(xleft=xlim[1], ybottom=ylim[1], xright=xlim[2], ytop=ylim[2],
col = df1$rcol[i], border=df1$rcol[i])
#
#                          #blank in part of main sector
#                          circos.rect(xleft=xlim[1], ybottom=ylim[1], xright=xlim[2]-rowSums(m)[i], ytop=ylim[1]+0.3,
#                                      col = "white", border = "white")
#
#                          #white line all the way around
#                          circos.rect(xleft=xlim[1], ybottom=0.3, xright=xlim[2], ytop=0.32, col = "white", border = "white")
#
#                          #plot axis
# circos.axis(labels.cex=0.6, major.at=seq(from=0,to=floor(df1$xmax)[i],by=50000),
#            labels.away.percentage = 0.15)
})
##
##plot links
##
#add sum values to df1, marking the x-position of the first links out (sum1) and in (sum2). Updated for further links in loop below.
df1$sum1 <- colSums(m)
df1$sum2 <- numeric(n)
#create a data.frame of the flow matrix sorted by flow size, to allow largest flow plotted first
df2<-cbind(as.data.frame(m),orig=rownames(m),  stringsAsFactors=FALSE)
df2<-reshape(df2, idvar="orig", varying=list(1:n), direction="long", timevar="dest", time=rownames(m),  v.names = "m")
df2<-arrange(df2,desc(m))
#keep only the largest flows to avoid clutter
df2<-subset(df2, m>quantile(m,.45))
library(sqldf)
df2<-  sqldf("select * from df2 where orig <> dest ")
for(k in 1:nrow(df2)){
#i,j reference of flow matrix
i<-match(df2$orig[k],df1$region)
j<-match(df2$dest[k],df1$region)
#plot link
#
#   circos.link(sector.index1=df1$region[i], point1=c(df1$sum1[i], df1$sum1[i] + abs(m[i, j])),
#               sector.index2=df1$region[j], point2=c(df1$sum2[j], df1$sum2[j] + abs(m[i, j])),
#               col = df1$lcol[i])
circos.link(sector.index1=df1$region[i], point1=c(df1$sum1[i], df1$sum1[i] + abs(m[i, j])),
sector.index2=df1$region[j], point2=c(df1$sum2[j], df1$sum2[j] + abs(m[i, j])),
col = df1$lcol[i])
#update sum1 and sum2 for use when plotting the next link
df1$sum1[i] =  df1$sum1[i] + abs(m[i, j])
df1$sum2[j] =  df1$sum2[j] + abs(m[i, j])
}
#remove created objects
#rm(df1,df2,m,i,j,k,n)
#
for(k in 1:nrow(df2)){
#i,j reference of flow matrix
i<-match(df2$orig[k],df1$region)
j<-match(df2$dest[k],df1$region)
link1 <- rbind(link1, c(df1$region[i], df1$sum1[i], df1$max[i] + abs(m[i, j]),
df1$region[j], df1$sum2[j], df1$max[i] + abs(m[i, j])))
#update sum1 and sum2 for use when plotting the next link
df1$sum1[i] = df1$sum1[i] + abs(m[i, j])
df1$sum2[j] = df1$sum2[j] + abs(m[i, j])
}
# link1 <- NULL
mat = matrix(runif(36), 6)
rownames(mat) = letters[1:6]
colnames(mat) = letters[1:6]
library(circlize)
circos.par(gap.degree = 8)
chordDiagram(mat, grid.col = 1:6, directional = TRUE, annotationTrack = "grid",
preAllocateTracks = list(list(track.height = 0.05),
list(track.height = 0.05)))
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.index = get.cell.meta.data("sector.index")
circos.text(mean(xlim), mean(ylim), sector.index, facing = "inside", niceFacing = TRUE)
}, bg.border = NA)
circos.trackPlotRegion(track.index = 2, panel.fun = function(x, y) {
circos.axis("bottom", major.tick.percentage = 0.2, labels.cex = 0.4)
}, bg.border = NA)
circos.clear()
library(circlize)
circos.par(gap.degree = 1)
chordDiagram(mat, grid.col = 1:6, directional = TRUE, annotationTrack = "grid",
preAllocateTracks = list(list(track.height = 0.05),
list(track.height = 0.05)))
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.index = get.cell.meta.data("sector.index")
circos.text(mean(xlim), mean(ylim), sector.index, facing = "inside", niceFacing = TRUE)
}, bg.border = NA)
circos.trackPlotRegion(track.index = 2, panel.fun = function(x, y) {
circos.axis("bottom", major.tick.percentage = 0.2, labels.cex = 0.4)
}, bg.border = NA)
circos.clear()
View(mat)
view(Fruit)
View(Fruit)
Fruit
library(googleVis)
Motion=gvisMotionChart(Fruits,
idvar="Fruit",
timevar="Year")
plot(Motion)
Fruits
View(Fruits)
emeamotion <- read.delim("~/emeamotion.txt")
View(emeamotion)
head(emeamotion)
Motion=gvisMotionChart(emeamotion,
idvar="advertiser",
timevar="date")
plot(Motion)
as.Date()
emeamotion <- read.delim("~/emeamotion.txt")
Motion=gvisMotionChart(emeamotion,
idvar="advertiser",
timevar="date")
plot(Motion)
emeamotion$date <- as.Date(emeamotion$date )
Motion=gvisMotionChart(emeamotion,
idvar="advertiser",
timevar="date")
plot(Motion)
head(emeamotion)
popall <- sqldf ("select advertiser, date, imps, users, totalaud ,precentaud
from emeamotion t1
full join emeamotion t2 on t1.date = t2.date
")
merge(x = emeamotion, y = emeamotion, by = NULL)
merger <- merge(x = emeamotion, y = emeamotion, by = date)
merger <- merge(x = emeamotion, y = emeamotion, by = NULL
sdi
merger <- merge(x = emeamotion, y = emeamotion, by = NULL)
View(merger)
plot(Motion)
merger <- merge(x = emeamotion, y = emeamotion$date, by = NULL)
merger <- merge(x = emeamotion, y = emeamotion$date, by = NULL)
View(merger)
emeamotion$date[]+1
emeamotion <- read.delim("~/emeamotion.txt")
head(emeamotion)
datelist <- data.frame(as.Date('2014-10-01'))
names(datelist) <- 'Date'
for(i in 1:100){
newdate <- data.frame(as.Date(datelist[1,] + i))
names(newdate) <- 'Date'
datelist<- rbind(datelist,newdate)
}
emeamotion <- read.delim("~/emeamotion.txt")
Motion=gvisMotionChart(emeamotion,
idvar="advertiser",
timevar="date")
emeamotion$date <- as.Date(emeamotion$date )
Motion=gvisMotionChart(emeamotion,
idvar="advertiser",
timevar="date")
plot(Motion)
emeamotion <- read.delim("~/emeamotion.txt")
View(emeamotion)
emeamotion$date <- as.Date(emeamotion$date )
Motion=gvisMotionChart(emeamotion,
idvar="advertiser",
timevar="date")
plot(Motion)
head(emeamotion)
Motion=gvisMotionChart(emeamotion,
idvar="advertiser",
yvar="freq",
xvar="imps"
timevar="date")
plot(Motion)
emeamotion$date <- as.Date(emeamotion$date )
Motion=gvisMotionChart(emeamotion,
idvar="advertiser",
yvar="freq",
xvar="imps",
timevar="date")
plot(Motion)
emeamotion <- read.delim("~/emeamotion.txt")
emeamotion$date <- as.Date(emeamotion$date )
Motion=gvisMotionChart(emeamotion,
idvar="advertiser",
yvar="freq",
xvar="imps",
timevar="date")
plot(Motion)
emeamotion <- read.delim("~/emeamotion.txt")
emeamotion$date <- as.Date(emeamotion$date )
Motion=gvisMotionChart(emeamotion,
idvar="advertiser",
yvar="freq",
xvar="imps",
timevar="date")
plot(Motion)
emeamotion <- read.delim("~/emeamotion.txt")
emeamotion$date <- as.Date(emeamotion$date )
Motion=gvisMotionChart(emeamotion,
idvar="advertiser",
yvar="freq",
xvar="imps",
timevar="date")
plot(Motion)
View(emeamotion)
corrplot(DMIR,is.corr = FALSE,method = "square", col = col3(100))
library(corrplot)
library(gdata)
corrplot(DMIR,is.corr = FALSE,method = "square", col = col3(100))
DIRM20142 <-  read.delim("~/demot.txt", header=TRUE, dec=",",stringsAsFactors=FALSE,as.is=T, na.strings = ".")
DMIR <- as.matrix(data.frame(DIRM20142[-1]))
corrplot(DMIR,is.corr = FALSE,method = "square", col = col3(100))
View(DMIR)
DIRM20142 <-  read.delim("~/DIRM20142.txt", header=TRUE, dec=",",stringsAsFactors=FALSE,as.is=T, na.strings = ".")
DMIR <- as.matrix(data.frame(DIRM20142[-1]))
corrplot(DMIR,is.corr = FALSE,method = "square", col = col3(100))
col3 <- colorRampPalette(c("red", "white","#F4B400", "#D84437"))
corrplot(DMIR,is.corr = FALSE,method = "square", col = col3(100))
View(DMIR)
DIRM20142 <-  read.delim("~/DIRM20142EMEA.txt", header=TRUE, dec=",",stringsAsFactors=FALSE,as.is=T, na.strings = ".")
DIRM20143 <- as.matrix(mydata)
DMIR <- as.matrix(data.frame(DIRM20142[-1]))
corrplot(DMIR,is.corr = FALSE,method = "square", col = col3(100))
corrplot(DMIR,is.corr = FALSE,method = "square", col = col3(100))
Intensity <- gvisIntensityMap(df)
plot(Intensity)
library(googleVis)
Intensity <- gvisIntensityMap(df)
plot(Intensity)
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
head(EXports)
head(Exports)
countryFreqs <- read.delim("~/DIRCountryFreqs.txt")
View(countryFreqs)
Geo=gvisGeoChart(countryFreqs, locationvar="country",
colorvar="campavg",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
countryFreqs <- read.delim("~/DIRCountryFreqs.txt")
Geo=gvisGeoChart(countryFreqs, locationvar="country",
colorvar="campavg",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
View(countryFreqs)
countryFreqs <- read.delim("~/DIRCountryFreqs.txt")
Geo=gvisGeoChart(countryFreqs, locationvar="country",
colorvar="avgimps",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
countryFreqs <- read.delim("~/DIRCountryFreqs.txt")
Geo=gvisGeoChart(countryFreqs, locationvar="country",
colorvar="avgimps",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
corrplot(DMIR,is.corr = FALSE,method = "circle", col = col3(100))
corrplot.mixed(DMIR, lower = "square", upper = "circle", col = col3(100))
corrplot.mixed(DMIR, is.corr = FALSE, lower = "square", upper = "circle", col = col3(100))
corrplot(DMIR,is.corr = FALSE,method = "circle", col = col3(100), sig.level = 0.05)
corrplot(DMIR,is.corr = FALSE,method = "square", col = col3(100), sig.level = 0.05)
