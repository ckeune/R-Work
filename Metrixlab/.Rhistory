install.packages("foreign")
library(foreign)
mydata = read.spss("C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4 ads test.sav", to.data.frame=T )
install.packages("foreign")
library(foreign)
install.packages("foreign")
mydata2 = read.spss("C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4 ads test_V2.sav", to.data.frame=T )
install.packages("foreign")
library(foreign)
mydata2 = read.spss("C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4 ads test_V2.sav", to.data.frame=T )
View(mydata2)
View(mydata2)
install.packages("gdata")
library(gdata)
getnames <- read.xls("C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile")
getnames <- read.xls("C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile.xlsx")
View(getnames)
names(mydata)
soj <- as.data.frame(names(mydata))
View(soj)
summary(mydata2)
summ <- as.data.frame(summary(mydata2))
View(summ)
write.xls(summ,"C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4export.xls")
install.packages("xlsx")
library(xlsx)
detatch(gdata)
detach(gdata)
detach(gdata)
detach("gdata")
getnames <- read.xls("C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile.xlsx")
install.packages("foreign")
library(foreign)
install.packages("xlsx")
library(xlsx)
required_libraries <- c('ggplot2',
'reshape2',
'stringr',
'lubridate',
'dplyr',
'foreign',
'xlsx')
#Install/load required libraries
for (lib_name in required_libraries){
if (!require(lib_name, character.only = T))
install.packages(lib_name)
library(lib_name, character.only = T)
}
write.xls(summ,"C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4export.xls")
getnames <- read.xlsx("C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile.xlsx")
getnames <- read.xlsx("C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile.xlsx", sheetName="")
getnames <- read.xlsx("C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile.xlsx", sheetName="Sheet1")
write.xlsx(summ,"C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4export.xls")
write.xlsx2(mydata2,"C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4dataexport.xlsx", sheetName="Sheet1",
col.names=TRUE, row.names=TRUE)
required_libraries <- c('ggplot2',
'reshape2',
'stringr',
'lubridate',
'dplyr',
'foreign',
'xlsx')
#Install/load required libraries
for (lib_name in required_libraries){
if (!require(lib_name, character.only = T))
install.packages(lib_name)
library(lib_name, character.only = T)
}
r
rversion
version
write.xlsx2(mydata2,"C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4dataexport.xlsx", sheetName="Sheet1",
col.names=TRUE, row.names=TRUE)
mydata2 <- mydata2[,colSums(is.na(mydata2))<nrow(mydata2)]
View(mydata2)
mydata2 <- mydata2[,colSums(is.na(mydata2))<nrow(mydata2)]
!apply (is.na(mydata2), 2, all)
View(mydata2)
View(getnames)
View(getnames)
getnames[,1]
mydata3 <- mydata2
mydata3 <- mydata2[,!(names(mydata2) %in% getnames[,1])]
View(mydata3)
mydata3 <- mydata2
mydata3 <- mydata2[,(names(mydata2) %in% getnames[,1])]
View(mydata3)
#import data
mydata2  <- read.spss("C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4 ads test_V2.sav", to.data.frame=T )
getnames <- read.xlsx("C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile.xlsx", sheetName="Sheet1")
#remove any columns with no data
mydata2 <- mydata2[,(names(mydata2) %in% getnames[,1])]
summ <- as.data.frame(summary(mydata2))
View(summ)
table(mydata2$familiarity)
summary(mydata2$familiarity)
aggregate(mydata2$familiarity)
aggregate(count ~ mydata2$familiarity)
aggregate(count ~ mydata2 )
aggregate(count() ~ mydata2$familiarity)
required_libraries <- c('ggplot2',
'reshape2',
'stringr',
'lubridate',
'dplyr',
'foreign',
'plyr',
'xlsx')
#Install/load required libraries
for (lib_name in required_libraries){
if (!require(lib_name, character.only = T))
install.packages(lib_name)
library(lib_name, character.only = T)
}
cdata <- ddply(mydata2, c("familairity", "cuurent_usage","favorability"), summarise,
N    = length(familairity)
#                ,
#                mean = mean(change),
#                sd   = sd(change),
#                se   = sd / sqrt(N)
)
cdata <- ddply(mydata2, c("familiarity", "cuurent_usage","favorability"), summarise,
N    = length(familairity)
#                ,
#                mean = mean(change),
#                sd   = sd(change),
#                se   = sd / sqrt(N)
)
cdata
cdata <- ddply(mydata2, c("mydata2$familiarity", "cuurent_usage","favorability"), summarise,
N    = length(familairity)
#                ,
#                mean = mean(change),
#                sd   = sd(change),
#                se   = sd / sqrt(N)
)
cdata
cdata <- ddply(mydata2, c("familiarity", "cuurent_usage","favorability"), summarise,
N    = length(familiarity)
#                ,
#                mean = mean(change),
#                sd   = sd(change),
#                se   = sd / sqrt(N)
)
cdata
View(cdata)
aggregate(  ~ mydata2$familiarity)
table( mydata2$familiarity)
names(mydata2) <- getnames[,1]
View(mydata2)
getnames[,1]
names(mydata2) <- getnames[,2]
names(mydata2)
names(mydata2) <- getnames[,1]
cdata <- ddply(mydata2, c("familiarity", "cuurent_usage","favorability"), summarise,
N    = length(familiarity),
mean = mean(weight),
sd   = sd(weight),
se   = sd / sqrt(N)
)
View(cdata)
cdata <- ddply(mydata2, c("familiarity", "cuurent_usage","favorability"), summarise,
N    = length(familiarity),
total = sum(weight)
)
View(cdata)
cdata <- ddply(mydata2, c("version", familiarity", "cuurent_usage","favorability"), summarise,
N    = length(familiarity),
total = sum(weight)
)
cdata <- ddply(mydata2, c( familiarity", "cuurent_usage","favorability"), summarise,
N    = length(familiarity),
total = sum(weight)
)
cdata <- ddply(mydata2, c("version", familiarity", "cuurent_usage","favorability"), summarise,
N    = length(familiarity),
total = sum(weight)
)
cdata <- ddply(mydata2, c("version", "familiarity", "cuurent_usage","favorability"), summarise,
N    = length(familiarity),
total = sum(weight)
)
View(cdata)
cdata <- ddply(mydata2, c("version", "familiarity"), summarise,
N    = length(familiarity),
total = sum(weight)
)
View(cdata)
cdata <- ddply(mydata2, c("version", "familiarity"), summarise,
N    = length(familiarity),
total = sum(weight)
)
View(cdata)
table(mydata2$familiarity)
required_libraries <- c('ggplot2',
'reshape2',
'stringr',
'lubridate',
'dplyr',
'foreign',
'plyr',
'xlsx')
#Install/load required libraries
for (lib_name in required_libraries){
if (!require(lib_name, character.only = T))
install.packages(lib_name)
library(lib_name, character.only = T)
}
#import data
mydata2  <- read.spss("C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4 ads test_V2.sav", to.data.frame=T )
getnames <- read.xlsx("C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile.xlsx", sheetName="Sheet1")
#remove any columns with no data
mydata2 <- mydata2[,(names(mydata2) %in% getnames[,1])]
#rename the columns to something that makes sense
names(mydata2) <- getnames[,2]
# table(mydata2$familiarity)
#
#
#
#
# cdata <- ddply(mydata2, c("version", "familiarity"), summarise,
#                N    = length(familiarity),
#                total = sum(weight)
# )
#
write.xlsx2(mydata2,"C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4dataexport.xlsx", sheetName="Metrixlab",
col.names=TRUE, row.names=TRUE)
#write.csv(mydata2, "C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4dataexport.csv")
required_libraries <- c('ggplot2',
'reshape2',
'stringr',
'lubridate',
'dplyr',
'foreign',
'plyr',
'xlsx',
'RGoogleDocs')
#Install/load required libraries
for (lib_name in required_libraries){
if (!require(lib_name, character.only = T))
install.packages(lib_name)
library(lib_name, character.only = T)
}
required_libraries <- c('ggplot2',
'reshape2',
'stringr',
'lubridate',
'dplyr',
'foreign',
'plyr',
'xlsx',
'RGoogleDocs')
#Install/load required libraries
for (lib_name in required_libraries){
if (!require(lib_name, character.only = T))
install.packages(lib_name)
library(lib_name, character.only = T)
}
suppressMessages(library("RGoogleDocs"))
require(RGoogleDocs)
require(XML)
require(RGoogleDocs)
require(XML)
require(RCurl)
require(XML)
spss_file <- "C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4 ads test_V2.sav"
reading_guide <- ""C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile.xlsx""
mydata2  <- read.spss(spss_file, to.data.frame=T )
getnames <- read.xlsx(reading_guide, sheetName="Sheet1")
spss_file <- "C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4 ads test_V2.sav"
reading_guide <- "C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile.xlsx"
mydata2  <- read.spss(spss_file, to.data.frame=T )
getnames <- read.xlsx(reading_guide, sheetName="Sheet1")
mydata2 <- mydata2[,(names(mydata2) %in% getnames[,1])]
spss_file <- "C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4 ads test_V2.sav"
reading_guide <- "C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile.xlsx"
output_file_name <- "C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4dataexport.xlsx"
mydata2  <- read.spss(spss_file, to.data.frame=T )
getnames <- read.xlsx(reading_guide, sheetName="Sheet1")
#remove any columns that does not match the naming file
mydata2 <- mydata2[,(names(mydata2) %in% getnames[,1])]
#rename the columns to something that makes sense
names(mydata2) <- getnames[,2]
#export to excel file (change directory below)
write.xlsx2(mydata2,output_file_name
,
sheetName="Metrixlab",
col.names=TRUE, row.names=TRUE)
output_file_name <- "C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4dataexport.xlsx"
required_libraries <- c('ggplot2',
'reshape2',
'stringr',
'lubridate',
'dplyr',
'foreign',
'plyr',
'xlsx'
)
#Install/load required libraries
for (lib_name in required_libraries){
if (!require(lib_name, character.only = T))
install.packages(lib_name)
library(lib_name, character.only = T)
}
#############################################################
#import data - Change the directory to point to your files
spss_file <- "C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4 ads test_V2.sav"
reading_guide <- "C:/Users/chris.keune/Documents/CreativeTest/Google Hangouts_ReadingGuide_DataFile.xlsx"
output_file_name <- "C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4dataexport.xlsx"
###########################################################
mydata2  <- read.spss(spss_file, to.data.frame=T )
getnames <- read.xlsx(reading_guide, sheetName="Sheet1")
#remove any columns that does not match the naming file
mydata2 <- mydata2[,(names(mydata2) %in% getnames[,1])]
#rename the columns to something that makes sense
names(mydata2) <- getnames[,2]
#export to excel file (change directory below)
write.xlsx2(mydata2,output_file_name
,
sheetName="Metrixlab",
col.names=TRUE, row.names=F)
#write.csv(mydata2, "C:/Users/chris.keune/Documents/CreativeTest/p21103_Google Hangouts_4dataexport.csv")
spss_file <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/hangoutsp21103_Google Hangouts_4 ads test_V2.sav"
reading_guide <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/Google Hangouts_ReadingGuide_DataFile.xlsx"
output_file_name <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/p21103_Google Hangouts_4dataexport.xlsx"
###########################################################
mydata2  <- read.spss(spss_file, to.data.frame=T )
getnames <- read.xlsx(reading_guide, sheetName="Sheet1")
#remove any columns that does not match the naming file
mydata2 <- mydata2[,(names(mydata2) %in% getnames[,1])]
#rename the columns to something that makes sense
names(mydata2) <- getnames[,2]
#export to excel file (change directory below)
write.xlsx2(mydata2,output_file_name
,
sheetName="Metrixlab",
col.names=TRUE, row.names=F)
spss_file <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/hangoutsp21103_Google Hangouts_4 ads test_V2.sav"
reading_guide <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/Google Hangouts_ReadingGuide_DataFile.xlsx"
output_file_name <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/p21103_Google Hangouts_4dataexport.xlsx"
###########################################################
mydata2  <- read.spss(spss_file, to.data.frame=T )
spss_file <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/hangout/sp21103_Google Hangouts_4 ads test.sav"
reading_guide <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/hangout/Google Hangouts_ReadingGuide_DataFile.xlsx"
output_file_name <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/hangout/p21103_Google Hangouts_4dataexport.xlsx"
mydata2  <- read.spss(spss_file, to.data.frame=T )
getnames <- read.xlsx(reading_guide, sheetName="Sheet1")
spss_file <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/hangouts/sp21103_Google Hangouts_4 ads test.sav"
reading_guide <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/hangouts/Google Hangouts_ReadingGuide_DataFile.xlsx"
output_file_name <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/hangouts/p21103_Google Hangouts_4dataexport.xlsx"
mydata2  <- read.spss(spss_file, to.data.frame=T )
spss_file <- "N:/Essence/Research/Measurement Vendors/MetrixLab/Creative Testing Materials/test/hangouts/p21103_Google Hangouts_4 ads test.sav"
mydata2  <- read.spss(spss_file, to.data.frame=T )
getnames <- read.xlsx(reading_guide, sheetName="Sheet1")
mydata2 <- mydata2[,(names(mydata2) %in% getnames[,1])]
#rename the columns to something that makes sense
names(mydata2) <- getnames[,2]
#export to excel file (change directory below)
write.xlsx2(mydata2,output_file_name
,
sheetName="Metrixlab",
col.names=TRUE, row.names=F)
